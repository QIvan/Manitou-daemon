<?xml version="1.0" encoding="UTF-8"?>
<project name="manitoud" default="all">
  
  
  <property file="manitoud.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.o/**"/>
    <exclude name="**/*.obj/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.javamail-1.4.4.classpath">
    <pathelement location="${basedir}/ext/lib/javamail-1.4.4.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <path id="library.junit4.classpath">
    <pathelement location="/usr/share/java/junit4.jar"/>
  </path>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_manitoud.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.manitoud, clean.artifact.package.build.root, clean.artifact.shell" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.manitoud" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.manitoud" value="${basedir}/out/artifacts/manitoud"/>
    <property name="artifact.output.manitoud-src.zip" value="${basedir}/out/artifacts/manitoud_src_zip"/>
    <property name="artifact.output.package.build.root" value="${basedir}/out/artifacts/package_build_root"/>
    <property name="artifact.output.shell" value="${basedir}/out/artifacts/shell"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.manitoud.jar" value="${artifacts.temp.dir}/manitoud.jar"/>
    <property name="temp.jar.path.manitoud-src.zip" value="${artifacts.temp.dir}/manitoud-src.zip"/>
  </target>
  
  <target name="clean.artifact.package.build.root" description="clean package.build.root artifact output">
    <delete dir="${artifact.output.package.build.root}"/>
  </target>
  
  <target name="clean.artifact.shell" description="clean shell artifact output">
    <delete dir="${artifact.output.shell}"/>
  </target>
  
  <target name="artifact.manitoud" depends="init.artifacts, compile.module.manitoud" description="Build &#39;manitoud&#39; artifact">
    <property name="artifact.temp.output.manitoud" value="${artifacts.temp.dir}/manitoud"/>
    <mkdir dir="${artifact.temp.output.manitoud}"/>
    <jar destfile="${temp.jar.path.manitoud.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${manitoud.output.dir}"/>
      <zipfileset file="${basedir}/src/main/java/META-INF/MANIFEST.MF" prefix="META-INF"/>
    </jar>
    <copy file="${temp.jar.path.manitoud.jar}" tofile="${artifact.temp.output.manitoud}/manitoud.jar"/>
  </target>
  
  <target name="artifact.manitoud-src.zip" depends="init.artifacts" description="Build &#39;manitoud-src.zip&#39; artifact">
    <property name="artifact.temp.output.manitoud-src.zip" value="${artifacts.temp.dir}/manitoud_src_zip"/>
    <mkdir dir="${artifact.temp.output.manitoud-src.zip}"/>
    <zip destfile="${temp.jar.path.manitoud-src.zip}">
      <zipfileset dir="${basedir}/src/main/java"/>
    </zip>
    <copy file="${temp.jar.path.manitoud-src.zip}" tofile="${artifact.temp.output.manitoud-src.zip}/manitoud-src.zip"/>
  </target>
  
  <target name="artifact.package.build.root" depends="init.artifacts, artifact.manitoud, artifact.manitoud-src.zip, artifact.shell" description="Build &#39;package.build.root&#39; artifact">
    <mkdir dir="${artifact.output.package.build.root}"/>
    <mkdir dir="${artifact.output.package.build.root}/usr"/>
    <mkdir dir="${artifact.output.package.build.root}/usr/share"/>
    <mkdir dir="${artifact.output.package.build.root}/usr/share/java"/>
    <copy todir="${artifact.output.package.build.root}/usr/share/java">
      <fileset dir="${artifact.temp.output.manitoud}"/>
    </copy>
    <copy todir="${artifact.output.package.build.root}/usr/share/java">
      <fileset dir="${artifact.temp.output.manitoud-src.zip}"/>
    </copy>
    <copy todir="${artifact.output.package.build.root}">
      <fileset dir="${artifact.output.shell}"/>
    </copy>
  </target>
  
  <target name="artifact.shell" depends="init.artifacts" description="Build &#39;shell&#39; artifact">
    <mkdir dir="${artifact.output.shell}"/>
    <copy todir="${artifact.output.shell}">
      <fileset dir="${basedir}/src/main/shell"/>
    </copy>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.manitoud, artifact.manitoud-src.zip, artifact.package.build.root, artifact.shell" description="Build all artifacts">
    <mkdir dir="${artifact.output.manitoud}"/>
    <copy todir="${artifact.output.manitoud}">
      <fileset dir="${artifact.temp.output.manitoud}"/>
    </copy>
    <mkdir dir="${artifact.output.manitoud-src.zip}"/>
    <copy todir="${artifact.output.manitoud-src.zip}">
      <fileset dir="${artifact.temp.output.manitoud-src.zip}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>